name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # 后端测试和构建
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run TypeScript type check
      run: npx tsc --noEmit

    - name: Run tests
      run: npm test

    - name: Build project
      run: npm run build

  # 前端测试和构建
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './client/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Run TypeScript type check
      run: npx tsc --noEmit

    - name: Run tests
      run: npm test -- --watchAll=false --coverage

    - name: Build project
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: ./client/build

  # 代码质量检查
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        cd client && npm ci

    - name: Check for ESLint
      run: |
        if [ -f ".eslintrc.js" ] || [ -f ".eslintrc.json" ]; then
          npx eslint src/ --ext .ts,.tsx
        fi
        if [ -f "client/.eslintrc.js" ] || [ -f "client/.eslintrc.json" ]; then
          cd client && npx eslint src/ --ext .ts,.tsx
        fi

  # 安全扫描
  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        cd client && npm ci

    - name: Run npm audit
      run: |
        npm audit --audit-level moderate
        cd client && npm audit --audit-level moderate

  # 部署到 GitHub Pages (可选)
  deploy:
    needs: [backend, frontend, lint, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './client/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Build frontend
      run: npm run build
      working-directory: ./client

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: success()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./client/build 